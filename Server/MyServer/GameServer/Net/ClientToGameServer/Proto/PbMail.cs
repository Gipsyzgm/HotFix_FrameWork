// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbMail.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbMail {

  /// <summary>Holder for reflection information generated from PbMail.proto</summary>
  public static partial class PbMailReflection {

    #region Descriptor
    /// <summary>File descriptor for PbMail.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbMailReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxQYk1haWwucHJvdG8SBlBiTWFpbCI3CgxTQ19tYWlsX2xpc3QSJwoITWFp",
            "bExpc3QYASADKAsyFS5QYk1haWwuT25lX21haWxfaW5mbyI1CgtTQ19tYWls",
            "X29uZRImCgdPbmVNYWlsGAEgASgLMhUuUGJNYWlsLk9uZV9tYWlsX2luZm8i",
            "bQoNT25lX21haWxfaW5mbxILCgNTSUQYASABKAUSDQoFVGl0bGUYAiABKAkS",
            "DgoGSXNPcGVuGAMgASgIEg8KB0lzSXRlbXMYBCABKAgSEAoIU2VuZFRpbWUY",
            "BSABKAUSDQoFSXNHZXQYBiABKAgiHQoOQ1NfbWFpbF9kZXRhaWwSCwoDU0lE",
            "GAEgASgFIksKDlNDX21haWxfZGV0YWlsEgsKA1NJRBgBIAEoBRIPCgdDb250",
            "ZW50GAIgASgJEg0KBUl0ZW1zGAMgAygFEgwKBE51bXMYBCADKAUiHwoMQ1Nf",
            "bWFpbF9vcGVuEg8KB1NJRExpc3QYASADKAUiHwoMU0NfbWFpbF9vcGVuEg8K",
            "B1NJRExpc3QYASADKAUiHQoOQ1NfbWFpbF9kZWxldGUSCwoDU0lEGAEgASgF",
            "Ih0KDlNDX21haWxfZGVsZXRlEgsKA1NJRBgBIAEoBSIfChBDU19tYWlsX2dl",
            "dEF3YXJkEgsKA1NJRBgBIAEoBSIfChBTQ19tYWlsX2dldEF3YXJkEgsKA1NJ",
            "RBgBIAEoBSIRCg9DU19tYWlsX29wZW5BbGxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.SC_mail_list), global::PbMail.SC_mail_list.Parser, new[]{ "MailList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.SC_mail_one), global::PbMail.SC_mail_one.Parser, new[]{ "OneMail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.One_mail_info), global::PbMail.One_mail_info.Parser, new[]{ "SID", "Title", "IsOpen", "IsItems", "SendTime", "IsGet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.CS_mail_detail), global::PbMail.CS_mail_detail.Parser, new[]{ "SID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.SC_mail_detail), global::PbMail.SC_mail_detail.Parser, new[]{ "SID", "Content", "Items", "Nums" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.CS_mail_open), global::PbMail.CS_mail_open.Parser, new[]{ "SIDList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.SC_mail_open), global::PbMail.SC_mail_open.Parser, new[]{ "SIDList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.CS_mail_delete), global::PbMail.CS_mail_delete.Parser, new[]{ "SID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.SC_mail_delete), global::PbMail.SC_mail_delete.Parser, new[]{ "SID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.CS_mail_getAward), global::PbMail.CS_mail_getAward.Parser, new[]{ "SID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.SC_mail_getAward), global::PbMail.SC_mail_getAward.Parser, new[]{ "SID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.CS_mail_openAll), global::PbMail.CS_mail_openAll.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///收到邮件列表
  /// </summary>
  public sealed partial class SC_mail_list : pb::IMessage<SC_mail_list> {
    private static readonly pb::MessageParser<SC_mail_list> _parser = new pb::MessageParser<SC_mail_list>(() => new SC_mail_list());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_mail_list> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_list() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_list(SC_mail_list other) : this() {
      mailList_ = other.mailList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_list Clone() {
      return new SC_mail_list(this);
    }

    /// <summary>Field number for the "MailList" field.</summary>
    public const int MailListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PbMail.One_mail_info> _repeated_mailList_codec
        = pb::FieldCodec.ForMessage(10, global::PbMail.One_mail_info.Parser);
    private readonly pbc::RepeatedField<global::PbMail.One_mail_info> mailList_ = new pbc::RepeatedField<global::PbMail.One_mail_info>();
    /// <summary>
    ///邮件列表信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbMail.One_mail_info> MailList {
      get { return mailList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_mail_list);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_mail_list other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailList_.Equals(other.mailList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailList_.WriteTo(output, _repeated_mailList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailList_.CalculateSize(_repeated_mailList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_mail_list other) {
      if (other == null) {
        return;
      }
      mailList_.Add(other.mailList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            mailList_.AddEntriesFrom(input, _repeated_mailList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///收到新邮件
  /// </summary>
  public sealed partial class SC_mail_one : pb::IMessage<SC_mail_one> {
    private static readonly pb::MessageParser<SC_mail_one> _parser = new pb::MessageParser<SC_mail_one>(() => new SC_mail_one());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_mail_one> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_one() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_one(SC_mail_one other) : this() {
      OneMail = other.oneMail_ != null ? other.OneMail.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_one Clone() {
      return new SC_mail_one(this);
    }

    /// <summary>Field number for the "OneMail" field.</summary>
    public const int OneMailFieldNumber = 1;
    private global::PbMail.One_mail_info oneMail_;
    /// <summary>
    ///邮件列表信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PbMail.One_mail_info OneMail {
      get { return oneMail_; }
      set {
        oneMail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_mail_one);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_mail_one other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OneMail, other.OneMail)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneMail_ != null) hash ^= OneMail.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oneMail_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OneMail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneMail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OneMail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_mail_one other) {
      if (other == null) {
        return;
      }
      if (other.oneMail_ != null) {
        if (oneMail_ == null) {
          oneMail_ = new global::PbMail.One_mail_info();
        }
        OneMail.MergeFrom(other.OneMail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (oneMail_ == null) {
              oneMail_ = new global::PbMail.One_mail_info();
            }
            input.ReadMessage(oneMail_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个邮件信息
  /// </summary>
  public sealed partial class One_mail_info : pb::IMessage<One_mail_info> {
    private static readonly pb::MessageParser<One_mail_info> _parser = new pb::MessageParser<One_mail_info>(() => new One_mail_info());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<One_mail_info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public One_mail_info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public One_mail_info(One_mail_info other) : this() {
      sID_ = other.sID_;
      title_ = other.title_;
      isOpen_ = other.isOpen_;
      isItems_ = other.isItems_;
      sendTime_ = other.sendTime_;
      isGet_ = other.isGet_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public One_mail_info Clone() {
      return new One_mail_info(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    ///邮件标题	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsOpen" field.</summary>
    public const int IsOpenFieldNumber = 3;
    private bool isOpen_;
    /// <summary>
    ///邮件是否已打开 (0未读,1已读)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "IsItems" field.</summary>
    public const int IsItemsFieldNumber = 4;
    private bool isItems_;
    /// <summary>
    ///邮件是否有道具奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsItems {
      get { return isItems_; }
      set {
        isItems_ = value;
      }
    }

    /// <summary>Field number for the "SendTime" field.</summary>
    public const int SendTimeFieldNumber = 5;
    private int sendTime_;
    /// <summary>
    ///邮件发送时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "IsGet" field.</summary>
    public const int IsGetFieldNumber = 6;
    private bool isGet_;
    /// <summary>
    ///是否已领取附件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGet {
      get { return isGet_; }
      set {
        isGet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as One_mail_info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(One_mail_info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      if (Title != other.Title) return false;
      if (IsOpen != other.IsOpen) return false;
      if (IsItems != other.IsItems) return false;
      if (SendTime != other.SendTime) return false;
      if (IsGet != other.IsGet) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (IsItems != false) hash ^= IsItems.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (IsGet != false) hash ^= IsGet.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (IsItems != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsItems);
      }
      if (SendTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SendTime);
      }
      if (IsGet != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsGet);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (IsItems != false) {
        size += 1 + 1;
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (IsGet != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(One_mail_info other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      if (other.IsItems != false) {
        IsItems = other.IsItems;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.IsGet != false) {
        IsGet = other.IsGet;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
          case 32: {
            IsItems = input.ReadBool();
            break;
          }
          case 40: {
            SendTime = input.ReadInt32();
            break;
          }
          case 48: {
            IsGet = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求邮件详细信息
  /// </summary>
  public sealed partial class CS_mail_detail : pb::IMessage<CS_mail_detail> {
    private static readonly pb::MessageParser<CS_mail_detail> _parser = new pb::MessageParser<CS_mail_detail>(() => new CS_mail_detail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_mail_detail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_detail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_detail(CS_mail_detail other) : this() {
      sID_ = other.sID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_detail Clone() {
      return new CS_mail_detail(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_mail_detail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_mail_detail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_mail_detail other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///收到邮件详细信息
  /// </summary>
  public sealed partial class SC_mail_detail : pb::IMessage<SC_mail_detail> {
    private static readonly pb::MessageParser<SC_mail_detail> _parser = new pb::MessageParser<SC_mail_detail>(() => new SC_mail_detail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_mail_detail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_detail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_detail(SC_mail_detail other) : this() {
      sID_ = other.sID_;
      content_ = other.content_;
      items_ = other.items_.Clone();
      nums_ = other.nums_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_detail Clone() {
      return new SC_mail_detail(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    ///邮件消息内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_items_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> items_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///附件物品模板Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "Nums" field.</summary>
    public const int NumsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_nums_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> nums_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///附件物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Nums {
      get { return nums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_mail_detail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_mail_detail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      if (Content != other.Content) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!nums_.Equals(other.nums_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= nums_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      items_.WriteTo(output, _repeated_items_codec);
      nums_.WriteTo(output, _repeated_nums_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      size += nums_.CalculateSize(_repeated_nums_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_mail_detail other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      items_.Add(other.items_);
      nums_.Add(other.nums_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 34:
          case 32: {
            nums_.AddEntriesFrom(input, _repeated_nums_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求打开邮件
  /// </summary>
  public sealed partial class CS_mail_open : pb::IMessage<CS_mail_open> {
    private static readonly pb::MessageParser<CS_mail_open> _parser = new pb::MessageParser<CS_mail_open>(() => new CS_mail_open());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_mail_open> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_open() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_open(CS_mail_open other) : this() {
      sIDList_ = other.sIDList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_open Clone() {
      return new CS_mail_open(this);
    }

    /// <summary>Field number for the "SIDList" field.</summary>
    public const int SIDListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_sIDList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> sIDList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///邮件SID(可同时打开多个)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SIDList {
      get { return sIDList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_mail_open);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_mail_open other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sIDList_.Equals(other.sIDList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sIDList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sIDList_.WriteTo(output, _repeated_sIDList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sIDList_.CalculateSize(_repeated_sIDList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_mail_open other) {
      if (other == null) {
        return;
      }
      sIDList_.Add(other.sIDList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            sIDList_.AddEntriesFrom(input, _repeated_sIDList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///收到打开邮件
  /// </summary>
  public sealed partial class SC_mail_open : pb::IMessage<SC_mail_open> {
    private static readonly pb::MessageParser<SC_mail_open> _parser = new pb::MessageParser<SC_mail_open>(() => new SC_mail_open());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_mail_open> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_open() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_open(SC_mail_open other) : this() {
      sIDList_ = other.sIDList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_open Clone() {
      return new SC_mail_open(this);
    }

    /// <summary>Field number for the "SIDList" field.</summary>
    public const int SIDListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_sIDList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> sIDList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SIDList {
      get { return sIDList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_mail_open);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_mail_open other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sIDList_.Equals(other.sIDList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sIDList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sIDList_.WriteTo(output, _repeated_sIDList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sIDList_.CalculateSize(_repeated_sIDList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_mail_open other) {
      if (other == null) {
        return;
      }
      sIDList_.Add(other.sIDList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            sIDList_.AddEntriesFrom(input, _repeated_sIDList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求删除一个邮件
  /// </summary>
  public sealed partial class CS_mail_delete : pb::IMessage<CS_mail_delete> {
    private static readonly pb::MessageParser<CS_mail_delete> _parser = new pb::MessageParser<CS_mail_delete>(() => new CS_mail_delete());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_mail_delete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_delete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_delete(CS_mail_delete other) : this() {
      sID_ = other.sID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_delete Clone() {
      return new CS_mail_delete(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_mail_delete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_mail_delete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_mail_delete other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///收到删除一个邮件
  /// </summary>
  public sealed partial class SC_mail_delete : pb::IMessage<SC_mail_delete> {
    private static readonly pb::MessageParser<SC_mail_delete> _parser = new pb::MessageParser<SC_mail_delete>(() => new SC_mail_delete());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_mail_delete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_delete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_delete(SC_mail_delete other) : this() {
      sID_ = other.sID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_delete Clone() {
      return new SC_mail_delete(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_mail_delete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_mail_delete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_mail_delete other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求领取邮件附件奖励
  /// </summary>
  public sealed partial class CS_mail_getAward : pb::IMessage<CS_mail_getAward> {
    private static readonly pb::MessageParser<CS_mail_getAward> _parser = new pb::MessageParser<CS_mail_getAward>(() => new CS_mail_getAward());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_mail_getAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_getAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_getAward(CS_mail_getAward other) : this() {
      sID_ = other.sID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_getAward Clone() {
      return new CS_mail_getAward(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_mail_getAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_mail_getAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_mail_getAward other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///收到领取邮件附件奖励
  /// </summary>
  public sealed partial class SC_mail_getAward : pb::IMessage<SC_mail_getAward> {
    private static readonly pb::MessageParser<SC_mail_getAward> _parser = new pb::MessageParser<SC_mail_getAward>(() => new SC_mail_getAward());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_mail_getAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_getAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_getAward(SC_mail_getAward other) : this() {
      sID_ = other.sID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_mail_getAward Clone() {
      return new SC_mail_getAward(this);
    }

    /// <summary>Field number for the "SID" field.</summary>
    public const int SIDFieldNumber = 1;
    private int sID_;
    /// <summary>
    ///邮件SID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SID {
      get { return sID_; }
      set {
        sID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_mail_getAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_mail_getAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SID != other.SID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SID != 0) hash ^= SID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_mail_getAward other) {
      if (other == null) {
        return;
      }
      if (other.SID != 0) {
        SID = other.SID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求一键领取所有未读邮件
  /// </summary>
  public sealed partial class CS_mail_openAll : pb::IMessage<CS_mail_openAll> {
    private static readonly pb::MessageParser<CS_mail_openAll> _parser = new pb::MessageParser<CS_mail_openAll>(() => new CS_mail_openAll());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_mail_openAll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_openAll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_openAll(CS_mail_openAll other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_mail_openAll Clone() {
      return new CS_mail_openAll(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_mail_openAll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_mail_openAll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_mail_openAll other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
