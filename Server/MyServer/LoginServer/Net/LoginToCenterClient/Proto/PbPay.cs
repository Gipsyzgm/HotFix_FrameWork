// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbPay.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbPay {

  /// <summary>Holder for reflection information generated from PbPay.proto</summary>
  public static partial class PbPayReflection {

    #region Descriptor
    /// <summary>File descriptor for PbPay.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbPayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtQYlBheS5wcm90bxIFUGJQYXkiWAoOQ1NfUGF5X1N1Y2NlZWQSDwoHT3Jk",
            "ZXJJZBgBIAEoCRIPCgdHb29kc0lkGAIgASgFEhEKCVBGT3JkZXJJZBgDIAEo",
            "CRIRCglDaGFubmVsSWQYBCABKAkiRgoOU0NfUGF5X1N1Y2NlZWQSDgoGU3Rh",
            "dHVzGAEgASgFEhEKCVBGT3JkZXJJZBgCIAEoCRIRCglDaGFubmVsSWQYAyAB",
            "KAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbPay.CS_Pay_Succeed), global::PbPay.CS_Pay_Succeed.Parser, new[]{ "OrderId", "GoodsId", "PFOrderId", "ChannelId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbPay.SC_Pay_Succeed), global::PbPay.SC_Pay_Succeed.Parser, new[]{ "Status", "PFOrderId", "ChannelId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///通知中央服充值付款成功
  /// </summary>
  public sealed partial class CS_Pay_Succeed : pb::IMessage<CS_Pay_Succeed> {
    private static readonly pb::MessageParser<CS_Pay_Succeed> _parser = new pb::MessageParser<CS_Pay_Succeed>(() => new CS_Pay_Succeed());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_Pay_Succeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbPay.PbPayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_Pay_Succeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_Pay_Succeed(CS_Pay_Succeed other) : this() {
      orderId_ = other.orderId_;
      goodsId_ = other.goodsId_;
      pFOrderId_ = other.pFOrderId_;
      channelId_ = other.channelId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_Pay_Succeed Clone() {
      return new CS_Pay_Succeed(this);
    }

    /// <summary>Field number for the "OrderId" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    ///游戏订单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GoodsId" field.</summary>
    public const int GoodsIdFieldNumber = 2;
    private int goodsId_;
    /// <summary>
    ///游戏商品Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "PFOrderId" field.</summary>
    public const int PFOrderIdFieldNumber = 3;
    private string pFOrderId_ = "";
    /// <summary>
    ///支付成功的平台订单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PFOrderId {
      get { return pFOrderId_; }
      set {
        pFOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChannelId" field.</summary>
    public const int ChannelIdFieldNumber = 4;
    private string channelId_ = "";
    /// <summary>
    ///sdk渠道号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_Pay_Succeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_Pay_Succeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (GoodsId != other.GoodsId) return false;
      if (PFOrderId != other.PFOrderId) return false;
      if (ChannelId != other.ChannelId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (PFOrderId.Length != 0) hash ^= PFOrderId.GetHashCode();
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (GoodsId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodsId);
      }
      if (PFOrderId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PFOrderId);
      }
      if (ChannelId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChannelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (PFOrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PFOrderId);
      }
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_Pay_Succeed other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.PFOrderId.Length != 0) {
        PFOrderId = other.PFOrderId;
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 16: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 26: {
            PFOrderId = input.ReadString();
            break;
          }
          case 34: {
            ChannelId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///收到中央服充值付款成功处理返回
  /// </summary>
  public sealed partial class SC_Pay_Succeed : pb::IMessage<SC_Pay_Succeed> {
    private static readonly pb::MessageParser<SC_Pay_Succeed> _parser = new pb::MessageParser<SC_Pay_Succeed>(() => new SC_Pay_Succeed());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_Pay_Succeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbPay.PbPayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_Pay_Succeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_Pay_Succeed(SC_Pay_Succeed other) : this() {
      status_ = other.status_;
      pFOrderId_ = other.pFOrderId_;
      channelId_ = other.channelId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_Pay_Succeed Clone() {
      return new SC_Pay_Succeed(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    /// <summary>
    ///状态 1成功 0失败 -1订单已发货 -2订单不存在 -3找不到商品 -4商品id不一致 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "PFOrderId" field.</summary>
    public const int PFOrderIdFieldNumber = 2;
    private string pFOrderId_ = "";
    /// <summary>
    ///发货成功的平台订单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PFOrderId {
      get { return pFOrderId_; }
      set {
        pFOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChannelId" field.</summary>
    public const int ChannelIdFieldNumber = 3;
    private string channelId_ = "";
    /// <summary>
    ///sdk渠道号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_Pay_Succeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_Pay_Succeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (PFOrderId != other.PFOrderId) return false;
      if (ChannelId != other.ChannelId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (PFOrderId.Length != 0) hash ^= PFOrderId.GetHashCode();
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (PFOrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PFOrderId);
      }
      if (ChannelId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChannelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (PFOrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PFOrderId);
      }
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_Pay_Succeed other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.PFOrderId.Length != 0) {
        PFOrderId = other.PFOrderId;
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            PFOrderId = input.ReadString();
            break;
          }
          case 26: {
            ChannelId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
